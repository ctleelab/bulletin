# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        id: ruby
        uses: ruby/setup-ruby@v1.190.0
        with:
          ruby-version: '3.3' # Not needed with a .ruby-version file
          cache-version: 0 # Increment this number if you need to re-download cached gems

      - name: Setup Python
        id: python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Checkout biblib
        uses: actions/checkout@v4
        with:
          repository: 'ctlee/biblib'
          path: biblib
      
      - name: Install biblib
        run: |
          pip install -v $GITHUB_WORKSPACE/biblib
          rm -r $GITHUB_WORKSPACE/biblib

      - name: Preprocess projects
        run: |
          ${{ steps.ruby.outputs.ruby-prefix }}/bin/bundle install
          ${{ steps.ruby.outputs.ruby-prefix }}/bin/ruby _scripts/update-and-preprocess.rb
          python _scripts/genbib.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "/ctlee"
        # env:
        #   JEKYLL_ENV: production

      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

      - name: Deploy to live server
        if: ${{ github.ref == 'refs/heads/main' }}
        run: echo "FOO"
    
  # Deployment job
  deploy:
    environment:
      name: live-server
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        # Downloads the artifact from the previous job
        uses: actions/download-artifact@v4
      - name: unpack
        run: |
          tar -xvf github-pages/artifact.tar
          cd github-pages
      # - name: Display structure of downloaded files
      #   run: ls -R
      - name: Create SSH Key
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_ed25519
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          echo "${{ secrtes.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
      - name: Deploy to server
        run: | 
          rsync -aHxv -e "ssh -A -J ${{ secrets.DEPLOY_USER}}@${{ secrets.JUMP_HOST }}" ./ ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:${{ secrets.DEPLOY_PATH }}/_hide/
